// Code generated by MockGen. DO NOT EDIT.
// Source: metricsService.go

// Package app is a generated GoMock package.
package app

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMyService is a mock of MyService interface.
type MockMyService struct {
	ctrl     *gomock.Controller
	recorder *MockMyServiceMockRecorder
}

// MockMyServiceMockRecorder is the mock recorder for MockMyService.
type MockMyServiceMockRecorder struct {
	mock *MockMyService
}

// NewMockMyService creates a new mock instance.
func NewMockMyService(ctrl *gomock.Controller) *MockMyService {
	mock := &MockMyService{ctrl: ctrl}
	mock.recorder = &MockMyServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMyService) EXPECT() *MockMyServiceMockRecorder {
	return m.recorder
}

// GetData mocks base method.
func (m *MockMyService) GetData() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetData")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetData indicates an expected call of GetData.
func (mr *MockMyServiceMockRecorder) GetData() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetData", reflect.TypeOf((*MockMyService)(nil).GetData))
}
